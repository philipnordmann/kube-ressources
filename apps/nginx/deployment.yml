---
apiVersion: v1
kind: Service
metadata:
  name: nginx2
spec:
  ports:
    - name: web
      port: 80
      targetPort: web

  selector:
    app: nginx2
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nginx2
  labels:
    app: nginx2

spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx2
  template:
    metadata:
      labels:
        app: nginx2
    spec:
      containers:
        - name: nginx2
          image: nginx
          imagePullPolicy: "Always"
          ports:
            - name: web
              containerPort: 80
          resources:
            limits:
              cpu: 500m
              memory: 200Mi
            requests:
              cpu: 200m
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx2-ingress
spec:
  tls:
    - hosts:
      - nginx2.k8s.nordmann.ninja
      secretName: nginx2-cert
  rules:
  - host: nginx2.k8s.nordmann.ninja
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx2
            port:
              name: web
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nginx2
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx2
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
  - type: Pods
    pods:
      metric:
        name: packets-per-second
      target:
        type: AverageValue
        averageValue: 1k
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: nginx2-cert
spec:
  commonName: nginx2.k8s.nordmann.ninja
  dnsNames:
    - nginx2.k8s.nordmann.ninja
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  secretName: nginx2-cert
